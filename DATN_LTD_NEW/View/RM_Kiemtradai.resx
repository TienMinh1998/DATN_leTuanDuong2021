<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btn_kiemtra.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAABGdBTUEAALGPC/xhBQAABBhJREFUSEud
        lXFM1GUYx+/gCAPv1xEHhwTKySF4iJycVIuh/ZHnWDqQGYpa9E9bq7m0ra3lXG2ltbramqtcLO2PSnMV
        isNCjCkG4WnUqF2A6zA4XrRWpjHuTuB5ep7Xl193KnT5bp89z973eb7f59777fczRK1UIp8oJcoIN7E8
        TriWcREOwkzErFyDdofXuDLLn+DJHiZGEj3Z4l/micTV1zGpKPeiaqiHCZJGH2ntIU37dWmenMST3nJP
        JX1cgQQo/iuf+Zy0lIn8JfmmB21+7dP78XaxHLp5jzT7WZsNSlMfzhq2fV4OBKoYTy7jqo4i2Ohz4IIj
        7phz0gySdjEblGlrbCN5VECgivHkWNvtgMaBZ6B9sBVrOl1Q1OLSz0lTkHYJG7gtazPF4hYX/h8avsvD
        z37dhuOhcZycnMSTQ6dx1clydH21VJ6z5rTB8vTqDFHWWgIEqjhrvvWnHGgb3YahUAjUwnA4DK/2vKHX
        sqZukFljFRVfFwOBHCvbnfAYTbi+O5/39H1mx0AWnvljO4TCIVTiMDExgU2/HIQV7SV6LWvqBvPWpYuH
        ThUhs/p0IW70LcIDfR+i9+dN8iqmz14JZKD/6rM0rRRHXlI88BF6Opx6HcOaukFObbpY21kANd8WYHWX
        Ew71N0EkEsErY5dh32A9PNWbiy8HMqD3r+flPk+txOFwYD9UdxUi90u6CmTOmrrB/PV3izpfPm7wLUTv
        D6/zfcrpWGds/Ao2iXrs/v0lVOLyjCc/MthIPQ7k3hthTd3A/kiaaOjJAwKf+H4xnB09Dvxk8KS8IpGw
        nJaXEofmC+9iQ4+de2SfinrOmrqBo84inuzNBQI5bu0tIJNj/PjpojKhxZMfHXqbaufL2ui+6Jw1dYPC
        DXeJ7f57MJrn/HY8d7FZPuPKQF5Ly7A3pm4mWFM3cNZr4oWBLCBQRZnvHMiFc5e+kFPTNcGx4K7ompja
        G3PW1A2WbNIEPyWEfFqi812BbPCNfoJfBl+M2Y+Kt8xZc9rAXbrZLLxD6TgTbw5Zb7k/G6ypGyzbPFe8
        IyxAoIrx5LOes+a0gctclRnc95sZCFQxnnzWc60qc4S05evaYay09ZW1LpWvgvcvanjgzxRs/jsZ20Im
        PHUtETsnjdg9ZcQzUwYJ512013EtQdYcHUvGg5dTsPGShrsHrVjeVoIJK2znWZsNzAYtaU/Oe0umqug9
        9PSPObD7ghU+oEmars6BEyETfDORwMJwFgg0oI8im54Im+Aw1eyn2teoh9+yazoX4YK9xfTJTNpL2hob
        8LIbycTqSeu311qCzjqzWFafKu7dkiIeeHSOqGxIFiuZxxWU814Fnd235U5Zyz0Lay0jGZ6086TF4nL6
        6MUfaP6G8r3xn3M7cC8Lq8kNhn8ADlVxUgVbmoYAAAAASUVORK5CYII=
</value>
  </data>
</root>